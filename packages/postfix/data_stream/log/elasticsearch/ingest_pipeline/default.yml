---
description: Pipeline for processing Postfix logs
processors:
  - set:
      field: ecs.version
      value: '8.8.0'
  - set:
      field: event.kind
      value: event
  - set:
      field: event.timezone
      value: "{{_tmp.tz_offset}}"
      if: ctx._tmp?.tz_offset != null && ctx._tmp?.tz_offset != 'local'
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - grok:
      field: event.original
      patterns:
      - "^(?:%{SYSLOGTIMESTAMP:_tmp.timestamp}|%{TIMESTAMP_ISO8601:_tmp.timestamp8601}) (?:%{SYSLOGFACILITY} )?(%{HOST})? %{NOTBRACKET:process.name}(?:\\[%{POSINT:process.pid:long}\\])?: %{GREEDYDATA:message}"
      pattern_definitions:
        NOTBRACKET: '[^\[]*'
        HOST: '(?:%{IP:host.ip}|%{HOSTNAME:host.name})'
      ignore_failure: true
  - set:
      field: service.name
      copy_from: process.name
      ignore_empty_value: true
  - set:
      field: service.type
      value: postfix
  - grok:
      field: message
      patterns:
      - "^%{POSTFIX_SENDMAIL}|%{POSTFIX_SMTP}|%{POSTFIX_LMTP}|%{POSTFIX_SMTPD}|%{POSTFIX_POSTSCREEN}|%{POSTFIX_POSTSUPER}|%{POSTFIX_TLSMGR}|%{POSTFIX_TLSPROXY}|%{POSTFIX_TRIVIAL_REWRITE}|%{POSTFIX_DISCARD}|%{POSTFIX_VIRTUAL}|%{POSTFIX_POSTMAP}|%{POSTFIX_SCRIPT}$"
      - "^%{POSTFIX_ANVIL}|%{POSTFIX_BOUNCE}|%{POSTFIX_CLEANUP}|%{POSTFIX_DNSBLOG}|%{POSTFIX_ERROR}|%{POSTFIX_LOCAL}|%{POSTFIX_MASTER}|%{POSTFIX_PICKUP}|%{POSTFIX_PIPE}|%{POSTFIX_POSTDROP}|%{POSTFIX_QMGR}|%{POSTFIX_SCACHE}$"
      ignore_failure: true
      pattern_definitions:
        # common postfix patterns
        POSTFIX_QUEUEID: ([0-9A-F]{6,}|[0-9a-zA-Z]{12,}|NOQUEUE)
        POSTFIX_CLIENT_INFO: "%{HOSTNAME:postfix.client_hostname}?\\[%{IP:postfix.client_ip}\\](:%{INT:postfix.client_port:long})?"
        POSTFIX_RELAY_INFO: "%{HOSTNAME:postfix.relay.hostname}?\\[(%{IP:postfix.relay.ip:ip}|%{DATA:postfix.relay.service})\\](:%{INT:postfix.relay.port:long})?|%{WORD:postfix.relay.service}"
        POSTFIX_SMTP_STAGE: (CONNECT|HELO|EHLO|STARTTLS|AUTH|MAIL( FROM)?|RCPT( TO)?|(end of )?DATA|RSET|UNKNOWN|END-OF-MESSAGE|VRFY|\\.)
        POSTFIX_ACTION: (accept|defer|discard|filter|header-redirect|reject|reject_warning)
        POSTFIX_STATUS_CODE: \\d{3}
        POSTFIX_STATUS_CODE_ENHANCED: \\d\\.\\d+\\.\\d+
        POSTFIX_DNSBL_MESSAGE: Service unavailable; .* \\[%{GREEDYDATA:postfix.status_data}\\] %{GREEDYDATA:postfix.status_message};
        POSTFIX_PS_ACCESS_ACTION: (DISCONNECT|BLACKLISTED|WHITELISTED|WHITELIST VETO|PASS NEW|PASS OLD)
        POSTFIX_PS_VIOLATION: (BARE NEWLINE|COMMAND (TIME|COUNT|LENGTH) LIMIT|COMMAND PIPELINING|DNSBL|HANGUP|NON-SMTP COMMAND|PREGREET)
        POSTFIX_TIME_UNIT: "%{NUMBER}[smhd]"
        POSTFIX_KEYVALUE_DATA: "[\\w-]+=[^;]*"
        POSTFIX_KEYVALUE: "%{POSTFIX_QUEUEID:postfix.queueid}: %{POSTFIX_KEYVALUE_DATA:postfix.keyvalue_data}"
        POSTFIX_WARNING_LEVEL: (warning|fatal|info)
        # TLS
        POSTFIX_TLSCONN: "(Anonymous|Trusted|Untrusted|Verified) TLS connection established (to %{POSTFIX_RELAY_INFO}|from %{POSTFIX_CLIENT_INFO}): %{DATA:postfix.tls.version} with cipher %{DATA:tls.cipher} \\(%{DATA:postfix.tls.cipher_size} bits\\)"
        POSTFIX_TLSVERIFICATION: "certificate verification failed for %{POSTFIX_RELAY_INFO}: %{GREEDYDATA:postfix.tls.error}"
        # Errors
        POSTFIX_DELAYS: "%{NUMBER:postfix.delay_before_qmgr}/%{NUMBER:postfix.delay_in_qmgr}/%{NUMBER:postfix.delay_conn_setup}/%{NUMBER:postfix.delay_transmission}"
        POSTFIX_LOSTCONN: (Connection timed out|No route to host|Connection refused|Network is unreachable|lost connection|timeout|SSL_accept error|-1)
        POSTFIX_LOSTCONN_REASONS: (receiving the initial server greeting|sending message body|sending end of data -- message may be sent more than once)
        POSTFIX_PROXY_MESSAGE: "(%{POSTFIX_STATUS_CODE:postfix.proxy_status_code} )?(%{POSTFIX_STATUS_CODE_ENHANCED:postfix.proxy_status_code_enhanced})?.*"
        POSTFIX_COMMAND_COUNTER_DATA: "(helo=(%{INT:postfix.cmd.helo_accepted:int}/)?%{INT:postfix.cmd.helo:int} )?(ehlo=(%{INT:postfix.cmd.ehlo_accepted:int}/)?%{INT:postfix.cmd.ehlo:int} )?(starttls=(%{INT:postfix.cmd.starttls_accepted:int}/)?%{INT:postfix.cmd.starttls:int} )?(auth=(%{INT:postfix.cmd.auth_accepted:int}/)?%{INT:postfix.cmd.auth:int} )?(mail=(%{INT:postfix.cmd.mail_accepted:int}/)?%{INT:postfix.cmd.mail:int} )?(rcpt=(%{INT:postfix.cmd.rcpt_accepted:int}/)?%{INT:postfix.cmd.rcpt:int} )?(data=(%{INT:postfix.cmd.data_accepted:int}/)?%{INT:postfix.cmd.data:int} )?(rset=(%{INT:postfix.cmd.rset_accepted:int}/)?%{INT:postfix.cmd.rset:int} )?(quit=(%{INT:postfix.cmd.quit_accepted:int}/)?%{INT:postfix.cmd.quit:int} )?(unknown=(%{INT:postfix.cmd.unknown_accepted:int}/)?%{INT:postfix.cmd.unknown:int} )?commands=(%{INT:postfix.cmd.count_accepted:int}/)?%{INT:postfix.cmd.count:int}"
        # helper patterns
        GREEDYDATA_NO_COLON: "[^:]*"
        GREEDYDATA_NO_SEMICOLON: "[^;]*"
        GREEDYDATA_NO_BRACKET: "[^<>]*"
        STATUS_WORD: "[\\w-]*"
        # warning patterns
        POSTFIX_WARNING_WITHOUT_KV: "(%{POSTFIX_QUEUEID:postfix.queueid}: )?%{POSTFIX_WARNING_LEVEL:log.level}: (%{POSTFIX_CLIENT_INFO}: )?%{GREEDYDATA:postfix.message}"
        POSTFIX_WARNING: "%{POSTFIX_WARNING_WITHOUT_KV}(; %{POSTFIX_KEYVALUE_DATA:postfix.keyvalue_data})?"
        # smtpd patterns
        POSTFIX_SMTPD_CONNECT: "connect from %{POSTFIX_CLIENT_INFO}"
        POSTFIX_SMTPD_DISCONNECT: "disconnect from %{POSTFIX_CLIENT_INFO}( %{POSTFIX_COMMAND_COUNTER_DATA:postfix.command_counter_data})?"
        POSTFIX_SMTPD_LOSTCONN: "%{POSTFIX_LOSTCONN:postfix.smtpd_lostconn_data}( after %{POSTFIX_SMTP_STAGE:postfix.smtp_stage}( \\(%{INT} bytes\\))?)? from %{POSTFIX_CLIENT_INFO}(: %{GREEDYDATA:postfix.smtpd_lostconn_reason})?"
        POSTFIX_SMTPD_NOQUEUE: "%{POSTFIX_QUEUEID:postfix.queueid}: %{POSTFIX_ACTION:postfix.action}: %{POSTFIX_SMTP_STAGE:postfix.smtp_stage} from %{POSTFIX_CLIENT_INFO}:( %{POSTFIX_STATUS_CODE:postfix.status_code} %{POSTFIX_STATUS_CODE_ENHANCED:postfix.status_code_enhanced})?( <%{DATA:postfix.status_data}>:)? (%{POSTFIX_DNSBL_MESSAGE}|%{GREEDYDATA:postfix.status_message};) %{POSTFIX_KEYVALUE_DATA:postfix.keyvalue_data}"
        POSTFIX_SMTPD_PIPELINING: "improper command pipelining after %{POSTFIX_SMTP_STAGE:postfix.smtp_stage} from %{POSTFIX_CLIENT_INFO}: %{GREEDYDATA:postfix.improper_pipelining_data}"
        POSTFIX_SMTPD_PROXY: "proxy-%{POSTFIX_ACTION:postfix.proxy_result}: (%{POSTFIX_SMTP_STAGE:postfix.proxy_smtp_stage}): %{POSTFIX_PROXY_MESSAGE:postfix.proxy_message}; %{POSTFIX_KEYVALUE_DATA:postfix.keyvalue_data}"
        # cleanup patterns
        POSTFIX_CLEANUP_MILTER: "%{POSTFIX_QUEUEID:postfix.queueid}: milter-%{POSTFIX_ACTION:postfix.milter.result}: %{GREEDYDATA:postfix.milter.message}; %{GREEDYDATA_NO_COLON:postfix.keyvalue_data}(: %{GREEDYDATA:postfix.milter.data})?"
        POSTFIX_CLEANUP_PREPEND_TYPE: (header|body)
        POSTFIX_CLEANUP_PREPEND: "%{POSTFIX_QUEUEID:postfix.queueid}: prepend: %{POSTFIX_CLEANUP_PREPEND_TYPE:postfix.prepend_type} %{GREEDYDATA:postfix.prepend_trigger} from %{POSTFIX_CLIENT_INFO}; %{GREEDYDATA_NO_COLON:postfix.keyvalue_data}: %{GREEDYDATA:postfix.prepend_value}"
        POSTFIX_CLEANUP_MESSAGEID: "%{POSTFIX_QUEUEID:postfix.queueid}: message-id=<?%{GREEDYDATA_NO_BRACKET:postfix.message-id}>?"
        # qmgr patterns
        POSTFIX_QMGR_REMOVED: "%{POSTFIX_QUEUEID:postfix.queueid}: removed"
        POSTFIX_QMGR_ACTIVE: "%{POSTFIX_QUEUEID:postfix.queueid}: %{POSTFIX_KEYVALUE_DATA:postfix.keyvalue_data} \\(queue active\\)"
        POSTFIX_QMGR_EXPIRED: "%{POSTFIX_QUEUEID:postfix.queueid}: from=<%{DATA:postfix.from}>, status=%{STATUS_WORD:postfix.status}, returned to sender"
        # pipe patterns
        POSTFIX_PIPE_ANY: "%{POSTFIX_QUEUEID:postfix.queueid}: %{POSTFIX_KEYVALUE_DATA:postfix.keyvalue_data}, status=%{STATUS_WORD:postfix.status} \\(%{GREEDYDATA:postfix.pipe_response}\\)"
        # error patterns
        POSTFIX_ERROR_ANY: "%{POSTFIX_QUEUEID:postfix.queueid}: %{POSTFIX_KEYVALUE_DATA:postfix.keyvalue_data}, status=%{STATUS_WORD:postfix.status} \\(%{GREEDYDATA:postfix.error_response}\\)"
        # discard patterns
        POSTFIX_DISCARD_ANY: "%{POSTFIX_QUEUEID:postfix.queueid}: %{POSTFIX_KEYVALUE_DATA:postfix.keyvalue_data} status=%{STATUS_WORD:postfix.status} %{GREEDYDATA}"
        # postsuper patterns
        POSTFIX_POSTSUPER_ACTIONS: (removed|requeued|placed on hold|released from hold)
        POSTFIX_POSTSUPER_ACTION: "%{POSTFIX_QUEUEID:postfix.queueid}: %{POSTFIX_POSTSUPER_ACTIONS:postfix.postsuper_action}"
        POSTFIX_POSTSUPER_SUMMARY_ACTIONS: (Deleted|Requeued|Placed on hold|Released from hold)
        POSTFIX_POSTSUPER_SUMMARY: "%{POSTFIX_POSTSUPER_SUMMARY_ACTIONS:postfix.postsuper_summary_action}: %{NUMBER:postfix.postsuper_summary_count} messages?"
        # postscreen patterns
        POSTFIX_PS_CONNECT: "CONNECT from %{POSTFIX_CLIENT_INFO} to \\[%{IP:postfix.server_ip:ip}\\]:%{INT:postfix.server_port:long}"
        POSTFIX_PS_ACCESS: "%{POSTFIX_PS_ACCESS_ACTION:postfix.postscreen.access} %{POSTFIX_CLIENT_INFO}"
        POSTFIX_PS_NOQUEUE: "%{POSTFIX_SMTPD_NOQUEUE}"
        POSTFIX_PS_TOOBUSY: "NOQUEUE: reject: CONNECT from %{POSTFIX_CLIENT_INFO}: %{GREEDYDATA:postfix.postscreen.toobusy_data}"
        POSTFIX_PS_DNSBL: "%{POSTFIX_PS_VIOLATION:postfix.postscreen.violation} rank %{INT:postfix.postscreen.dnsbl.rank} for %{POSTFIX_CLIENT_INFO}"
        POSTFIX_PS_CACHE: "cache %{DATA} full cleanup: retained=%{NUMBER:postfix.postscreen.cache_retained} dropped=%{NUMBER:postfix.postscreen.cache_dropped} entries"
        POSTFIX_PS_VIOLATIONS: "%{POSTFIX_PS_VIOLATION:postfix.postscreen.violation}( %{INT})?( after %{NUMBER:postfix.postscreen.violation_time})? from %{POSTFIX_CLIENT_INFO}(( after %{POSTFIX_SMTP_STAGE:postfix.smtp_stage})?(: %{GREEDYDATA:postfix.postscreen.data})?| in tests (after|before) SMTP handshake)"
        # dnsblog patterns
        POSTFIX_DNSBLOG_LISTING: "addr %{IP:postfix.client_ip} listed by domain %{HOSTNAME:postfix.dnsbl.domain} as %{IP:postfix.dnsbl.result}"
        # tlsproxy patterns
        POSTFIX_TLSPROXY_CONN: "(DIS)?CONNECT( from)? %{POSTFIX_CLIENT_INFO}"
        # anvil patterns
        POSTFIX_ANVIL_CONN_RATE: "statistics: max connection rate %{NUMBER:postfix.anvil.conn_rate:int}/%{POSTFIX_TIME_UNIT:postfix.anvil.conn_period} for \\(%{DATA:postfix.service}:%{IP:postfix.client_ip}\\) at %{SYSLOGTIMESTAMP:postfix.anvil.timestamp}"
        POSTFIX_ANVIL_CONN_CACHE: "statistics: max cache size %{NUMBER:postfix.anvil.cache_size:int} at %{SYSLOGTIMESTAMP:postfix.anvil.timestamp}"
        POSTFIX_ANVIL_CONN_COUNT: "statistics: max connection count %{NUMBER:postfix.anvil.conn_count:int} for \\(%{DATA:postfix.service}:%{IP:postfix.client_ip}\\) at %{SYSLOGTIMESTAMP:postfix.anvil.timestamp}"
        # smtp patterns
        POSTFIX_SMTP_DELIVERY: "%{POSTFIX_KEYVALUE} status=%{STATUS_WORD:postfix.status}( \\(%{GREEDYDATA:postfix.smtp_response}\\))?"
        POSTFIX_SMTP_CONNERR: "connect to %{POSTFIX_RELAY_INFO}: %{POSTFIX_LOSTCONN:postfix.smtp_lostconn_data}"
        POSTFIX_SMTP_SSLCONNERR: "SSL_connect error to %{POSTFIX_RELAY_INFO}: %{POSTFIX_LOSTCONN:postfix.smtp_lostconn_data}"
        POSTFIX_SMTP_LOSTCONN: "%{POSTFIX_QUEUEID:postfix.queueid}: %{POSTFIX_LOSTCONN:postfix.smtp_lostconn_data} with %{POSTFIX_RELAY_INFO}( while %{POSTFIX_LOSTCONN_REASONS:postfix.smtp_lostconn_reason})?"
        POSTFIX_SMTP_TIMEOUT: "%{POSTFIX_QUEUEID:postfix.queueid}: conversation with %{POSTFIX_RELAY_INFO} timed out( while %{POSTFIX_LOSTCONN_REASONS:postfix.smtp_lostconn_reason})?"
        POSTFIX_SMTP_RELAYERR: "%{POSTFIX_QUEUEID:postfix.queueid}: host %{POSTFIX_RELAY_INFO} said: %{GREEDYDATA:postfix.smtp_response} \\(in reply to %{POSTFIX_SMTP_STAGE:postfix.smtp_stage} command\\)"
        POSTFIX_SMTP_SSLAUTHERR: "%{POSTFIX_QUEUEID:postfix.queueid}: SASL authentication failed; server %{POSTFIX_RELAY_INFO} said: %{GREEDYDATA:postfix.smtp_response}"
        POSTFIX_SMTP_UTF8: "host %{POSTFIX_RELAY_INFO} offers SMTPUTF8 support, but not 8BITMIME"
        POSTFIX_SMTP_PIX: "%{POSTFIX_QUEUEID:postfix.queueid}: enabling PIX workarounds: %{DATA:postfix.pix_workaround} for %{POSTFIX_RELAY_INFO}"
        # master patterns
        POSTFIX_MASTER_START: "(daemon started|reload) -- version %{DATA:postfix.version}, configuration %{PATH:postfix.config_path}"
        POSTFIX_MASTER_EXIT: "terminating on signal %{INT:postfix.termination_signal}"
        # bounce patterns
        POSTFIX_BOUNCE_NOTIFICATION: "%{POSTFIX_QUEUEID:postfix.queueid}: sender (non-delivery|delivery status|delay) notification: %{POSTFIX_QUEUEID:postfix.bounce_queueid}"
        # scache patterns
        POSTFIX_SCACHE_LOOKUPS: "statistics: (address|domain) lookup hits=%{INT:postfix.scache.hits} miss=%{INT:postfix.scache.miss} success=%{INT:postfix.scache.success}%"
        POSTFIX_SCACHE_SIMULTANEOUS: "statistics: max simultaneous domains=%{INT:postfix.scache.domains} addresses=%{INT:postfix.scache.addresses} connection=%{INT:postfix.scache.connection}"
        POSTFIX_SCACHE_TIMESTAMP: "statistics: start interval %{SYSLOGTIMESTAMP:postfix.scache.timestamp}"
        # aggregate all patterns
        POSTFIX_SMTPD: "%{POSTFIX_SMTPD_CONNECT}|%{POSTFIX_SMTPD_DISCONNECT}|%{POSTFIX_SMTPD_LOSTCONN}|%{POSTFIX_SMTPD_NOQUEUE}|%{POSTFIX_SMTPD_PIPELINING}|%{POSTFIX_TLSCONN}|%{POSTFIX_WARNING}|%{POSTFIX_SMTPD_PROXY}|%{POSTFIX_KEYVALUE}"
        POSTFIX_CLEANUP: "%{POSTFIX_CLEANUP_MESSAGEID}|%{POSTFIX_CLEANUP_MILTER}|%{POSTFIX_CLEANUP_PREPEND}|%{POSTFIX_WARNING}|%{POSTFIX_KEYVALUE}"
        POSTFIX_QMGR: "%{POSTFIX_QMGR_REMOVED}|%{POSTFIX_QMGR_ACTIVE}|%{POSTFIX_QMGR_EXPIRED}|%{POSTFIX_WARNING}"
        POSTFIX_PIPE: "%{POSTFIX_PIPE_ANY}"
        POSTFIX_POSTSCREEN: "%{POSTFIX_PS_CONNECT}|%{POSTFIX_PS_ACCESS}|%{POSTFIX_PS_NOQUEUE}|%{POSTFIX_PS_TOOBUSY}|%{POSTFIX_PS_CACHE}|%{POSTFIX_PS_DNSBL}|%{POSTFIX_PS_VIOLATIONS}|%{POSTFIX_WARNING}"
        POSTFIX_DNSBLOG: "%{POSTFIX_DNSBLOG_LISTING}|%{POSTFIX_WARNING}"
        POSTFIX_ANVIL: "%{POSTFIX_ANVIL_CONN_RATE}|%{POSTFIX_ANVIL_CONN_CACHE}|%{POSTFIX_ANVIL_CONN_COUNT}"
        POSTFIX_SMTP: "%{POSTFIX_SMTP_DELIVERY}|%{POSTFIX_SMTP_CONNERR}|%{POSTFIX_SMTP_SSLCONNERR}|%{POSTFIX_SMTP_SSLAUTHERR}|%{POSTFIX_SMTP_LOSTCONN}|%{POSTFIX_SMTP_TIMEOUT}|%{POSTFIX_SMTP_RELAYERR}|%{POSTFIX_TLSCONN}|%{POSTFIX_WARNING}|%{POSTFIX_SMTP_UTF8}|%{POSTFIX_TLSVERIFICATION}|%{POSTFIX_SMTP_PIX}"
        POSTFIX_DISCARD: "%{POSTFIX_DISCARD_ANY}|%{POSTFIX_WARNING}"
        POSTFIX_LMTP: "%{POSTFIX_SMTP}"
        POSTFIX_PICKUP: "%{POSTFIX_KEYVALUE}"
        POSTFIX_TLSPROXY: "%{POSTFIX_TLSPROXY_CONN}|%{POSTFIX_WARNING}"
        POSTFIX_MASTER: "%{POSTFIX_MASTER_START}|%{POSTFIX_MASTER_EXIT}|%{POSTFIX_WARNING}"
        POSTFIX_BOUNCE: "%{POSTFIX_BOUNCE_NOTIFICATION}"
        POSTFIX_SENDMAIL: "%{POSTFIX_WARNING}"
        POSTFIX_POSTDROP: "%{POSTFIX_WARNING}"
        POSTFIX_SCACHE: "%{POSTFIX_SCACHE_LOOKUPS}|%{POSTFIX_SCACHE_SIMULTANEOUS}|%{POSTFIX_SCACHE_TIMESTAMP}"
        POSTFIX_TRIVIAL_REWRITE: "%{POSTFIX_WARNING}"
        POSTFIX_TLSMGR: "%{POSTFIX_WARNING}"
        POSTFIX_LOCAL: "%{POSTFIX_KEYVALUE}|%{POSTFIX_WARNING}"
        POSTFIX_VIRTUAL: "%{POSTFIX_SMTP_DELIVERY}"
        POSTFIX_ERROR: "%{POSTFIX_ERROR_ANY}"
        POSTFIX_POSTSUPER: "%{POSTFIX_POSTSUPER_ACTION}|%{POSTFIX_POSTSUPER_SUMMARY}"
        POSTFIX_POSTMAP: "%{POSTFIX_WARNING}"
        POSTFIX_SCRIPT: "%{POSTFIX_WARNING}"
  - date:
      if: ctx._tmp.timestamp8601 != null
      field: _tmp.timestamp8601
      target_field: '@timestamp'
      formats:
        - ISO8601
  - date:
      if: ctx.event?.timezone != null && ctx._tmp?.timestamp != null
      field: _tmp.timestamp
      target_field: '@timestamp'
      formats:
      - MMM  d HH:mm:ss
      - MMM d HH:mm:ss
      - MMM dd HH:mm:ss
      timezone: '{{ event.timezone }}'
  - kv:
      field: postfix.keyvalue_data
      target_field: _tmp
      prefix: postfix_
      field_split: ',? (?=[a-zA-Z][a-zA-Z0-9_]*=)'
      value_split: '='
      trim_value: '<>'
      # strip_brackets: true
      ignore_missing: true
  - grok:
      field: _tmp.postfix_client
      patterns:
      - "^%{POSTFIX_CLIENT_INFO}$"
      pattern_definitions:
        POSTFIX_CLIENT_INFO: "%{HOSTNAME:postfix.client_hostname}?\\[%{IP:postfix.client_ip}\\](:%{INT:postfix.client_port:long})?"
      ignore_missing: true
  - grok:
      field: _tmp.postfix_relay
      patterns:
      - "^%{POSTFIX_RELAY_INFO}$"
      pattern_definitions:
        POSTFIX_RELAY_INFO: "%{HOSTNAME:postfix.relay.hostname}?\\[(%{IP:postfix.relay.ip:ip}|%{DATA:postfix.relay.service})\\](:%{INT:postfix.relay.port:long})?|%{WORD:postfix.relay.service}"
      ignore_missing: true
  - grok:
      field: _tmp.postfix_delays
      patterns:
      - "^%{POSTFIX_DELAYS}$"
      pattern_definitions:
        POSTFIX_DELAYS: "%{NUMBER:postfix.delay_before_qmgr}/%{NUMBER:postfix.delay_in_qmgr}/%{NUMBER:postfix.delay_conn_setup}/%{NUMBER:postfix.delay_transmission}"
      ignore_missing: true
  - rename:
      field: _tmp.postfix_proto
      target_field: network.protocol
      ignore_missing: true
  - append:
      field: email.to.address
      value: "{{_tmp.postfix_to}}"
      allow_duplicates: false
      if: ctx._tmp?.postfix_to != null
  - append:
      field: email.to.address
      value: "{{_tmp.postfix_orig_to}}"
      allow_duplicates: false
      if: ctx._tmp?.postfix_orig_to != null
  - append:
      field: email.from.address
      value: "{{_tmp.postfix_from}}"
      allow_duplicates: false
      if: ctx._tmp?.postfix_to != null
  - rename:
      field: _tmp.postfix_helo
      target_field: postfix.helo
      ignore_missing: true
  - rename:
      field: _tmp.postfix_delay
      target_field: postfix.delay
      ignore_missing: true
  - rename:
      field: _tmp.postfix_dsn
      target_field: postfix.dsn
      ignore_missing: true
  - rename:
      field: _tmp.postfix_message-id
      target_field: email.message_id
      ignore_missing: true
      ignore_failure: true
  - convert:
      field: _tmp.postfix_size
      target_field: postfix.size
      type: long
      ignore_missing: true
  # - grok:
  #     field: postfix.command_counter_data
  #     patterns:
  #     - "^%{POSTFIX_COMMAND_COUNTER_DATA}$"
  #     pattern_definitions:
  #       POSTFIX_COMMAND_COUNTER_DATA: "(helo=(%{INT:postfix.cmd.helo_accepted}/)?%{INT:postfix.cmd.helo} )?(ehlo=(%{INT:postfix.cmd.ehlo_accepted}/)?%{INT:postfix.cmd.ehlo} )?(starttls=(%{INT:postfix.cmd.starttls_accepted}/)?%{INT:postfix.cmd.starttls} )?(auth=(%{INT:postfix.cmd.auth_accepted}/)?%{INT:postfix.cmd.auth} )?(mail=(%{INT:postfix.cmd.mail_accepted}/)?%{INT:postfix.cmd.mail} )?(rcpt=(%{INT:postfix.cmd.rcpt_accepted}/)?%{INT:postfix.cmd.rcpt} )?(data=(%{INT:postfix.cmd.data_accepted}/)?%{INT:postfix.cmd.data} )?(rset=(%{INT:postfix.cmd.rset_accepted}/)?%{INT:postfix.cmd.rset} )?(quit=(%{INT:postfix.cmd.quit_accepted}/)?%{INT:postfix.cmd.quit} )?(unknown=(%{INT:postfix.cmd.unknown_accepted}/)?%{INT:postfix.cmd.unknown} )?commands=(%{INT:postfix.cmd.count_accepted}/)?%{INT:postfix.cmd.count}"
  #     ignore_missing: true
  - dissect:
      field: postfix.tls.version
      pattern: "%{tls.version_protocol}v%{tls.version}"
      ignore_failure: true
      ignore_missing: true
  - lowercase:
      field: tls.version_protocol
      ignore_missing: true
  - set:
      field: event.outcome
      value: failure
      if: ctx.postfix?.tls_error != null || ctx.postfix?.smtp_lostconn_data != null
  - convert:
      field: postfix.client_ip
      target_field: client.ip
      type: ip
      if: ctx.postfix?.client_ip != null
  - convert:
      field: postfix.client_port
      target_field: client.port
      type: long
      if: ctx.postfix?.client_port != null
  - rename:
      field: postfix.client_hostname
      target_field: client.domain
      ignore_missing: true
  - set:
      field: client.address
      copy_from: client.domain
      if: ctx.client?.address == null && ctx.client?.domain != null
  - set:
      field: client.address
      copy_from: client.ip
      if: ctx.client?.address == null && ctx.client?.ip != null
  - convert:
      field: postfix.server_ip
      target_field: server.ip
      type: ip
      if: ctx.postfix?.server_ip != null
  - convert:
      field: postfix.server_port
      target_field: server.port
      type: long
      if: ctx.postfix?.server_port != null
  - convert:
      field: postfix.relay.ip
      target_field: server.ip
      type: ip
      if: ctx.postfix?.relay?.ip != null
  - convert:
      field: postfix.relay.hostname
      target_field: server.domain
      type: string
      if: ctx.postfix?.relay?.hostname != null
  - set:
      field: server.address
      copy_from: server.domain
      if: ctx.server?.address == null && ctx.server?.domain != null
  - set:
      field: server.address
      copy_from: server.ip
      if: ctx.server?.address == null && ctx.server?.ip != null
  - convert:
      field: postfix.relay.port
      target_field: server.port
      type: long
      if: ctx.postfix?.relay?.port != null
  - rename:
      field: postfix.service
      target_field: service.address
      ignore_missing: true
  - rename:
      field: postfix.action
      target_field: event.action
      ignore_missing: true
  - rename:
      field: postfix.message-id
      target_field: email.message_id
      ignore_missing: true
  - date:
      if: ctx.event?.timezone != null && ctx.postfix?.anvil?.timestamp != null
      field: postfix.anvil.timestamp
      target_field: postfix.anvil.timestamp
      ignore_failure: true
      formats:
      - MMM  d HH:mm:ss
      - MMM d HH:mm:ss
      - MMM dd HH:mm:ss
      timezone: '{{ event.timezone }}'


      
  - append:
      field: related.ip
      value: "{{postfix.relay.ip}}"
      allow_duplicates: false
      if: ctx.postfix?.relay?.ip != null
  - append:
      field: related.hosts
      value: "{{postfix.relay.hostname}}"
      allow_duplicates: false
      if: ctx.postfix?.relay?.hostname != null
  - append:
      field: related.hosts
      value: "{{server.domain}}"
      allow_duplicates: false
      if: ctx.server?.domain != null
  - append:
      field: related.ip
      value: "{{server.ip}}"
      allow_duplicates: false
      if: ctx.server?.ip != null
  - append:
      field: related.hosts
      value: "{{client.domain}}"
      allow_duplicates: false
      if: ctx.client?.domain != null
  - append:
      field: related.ip
      value: "{{client.ip}}"
      allow_duplicates: false
      if: ctx.client?.ip != null
  - append:
      field: related.hosts
      value: "{{postfix.dnsbl.domain}}"
      allow_duplicates: false
      if: ctx.postfix?.dnsbl?.domain != null
  - append:
      field: related.ip
      value: "{{postfix.dnsbl.result}}"
      allow_duplicates: false
      if: ctx.postfix?.dnsbl?.result != null

  - remove:
      field:
        - _tmp
        - postfix.keyvalue_data
        - postfix.command_counter_data
        - postfix.tls.version
        - postfix.client_ip
        - postfix.client_port
        - postfix.server_ip
        - postfix.server_port
      ignore_failure: true
      ignore_missing: true
  - script:
      description: Drops null/empty values recursively
      lang: painless
      ignore_failure: true
      source: |
        boolean drop(Object o) {
          if (o == null || o == "") {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
  - remove:
      field: event.original
      if: "ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
on_failure:
- remove:
    field:
      - _tmp
    ignore_failure: true
- set:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'